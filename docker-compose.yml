services:
  app:
    build: .
    command: sh -c "python manage.py collectstatic --no-input && python manage.py migrate && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - static_volume:/app/staticfiles
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env

  db:
    image: postgres:17
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    expose:
      - "5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      retries: 5
      timeout: 5s

  redis:
    image: redis:latest
    expose:
      - "6379"

  celery:
    build: .
    command:
      bash -c "celery -A config worker --loglevel=info"
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
    env_file:
      - .env

  celery-beat:
    build: .
    command:
      bash -c "celery -A config beat --loglevel=info"
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
    env_file:
      - .env

volumes:
  pg_data:
  static_volume: